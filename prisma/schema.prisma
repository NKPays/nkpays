// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    role          Role      @default(USER)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum Role {
    ADMIN
    USER
}

model ContactQuery {
    id        Int      @id @default(autoincrement())
    name      String
    email     String   @unique
    phone     String?
    message   String?  @db.Text
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
}

model Product {
    id             Int              @id @default(autoincrement())
    title          String
    desc           String?          @db.Text
    metaDesc       String?          @db.Text
    thumbnail      String?
    info           Json?
    gallery        Json
    slug           String
    price          Float?           @default(0.0)
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt()
    ProductEnquiry ProductEnquiry[]
}

model ProductEnquiry {
    id        Int      @id @default(autoincrement())
    name      String
    email     String   @unique
    phone     String?
    message   String?  @db.Text
    productId Int
    product   Product  @relation(fields: [productId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
}

model LoginLink {
    id        Int      @id @default(autoincrement())
    title     String
    link      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
}

model Contact {
    id        Int      @id @default(autoincrement())
    title     String?
    address   String?  @db.Text
    email     Json?
    phone     Json?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
}

model Social {
    id   Int    @id @default(autoincrement())
    site String
    link String
}
